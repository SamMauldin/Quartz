-- Setup environment
A.gui = {}

A.gui.element = A.LCS.class({name = "element"})
A.gui.screen = A.LCS.class({name = "screen"})

-- screen, aka app

function A.gui.screen:init()
	self.gui = {}
end

function A.gui.screen:add(obj)
	table.insert(self.gui, obj)
end

function A.gui.screen:listen()
	while true do
		for k,v in pairs(self.gui) do
			v:draw()
		end
		local e = { os.pullEvent() }
		for k,v in pairs(self.gui) do
			v:event(e)
		end
	end
end

A.gui.app = A.gui.screen

-- Element framework
function A.gui.element:draw()
	
end

function A.gui.element:event()

end

-- Button class

A.gui.button = A.gui.element:extends({name:"button"})

function A.gui.button:init(x, y, w, h, text, handler)
	self.x = x
	self.y = y
	self.w = w
	self.h = h
	self.text = text
	self.handler = handler
end

function A.gui.button:draw()
	A.draw.box(self.x, self.y, self.x+self.w, self.y, self.h)
	local textLayerY = math.ceil(self.h/2)
	local textLayerX = math.ceil((self.w/2)-(#self.text/2))
	A.draw.setCursorPos(textLayerX, textLayerY)
	A.draw.write(self.text)
end

function A.gui.button:event(ev)
	if ev[1] == "mouse_click" then
		if contained(ev[3], ev[4], self.x, self.y, self.x+self.w, self.y+self.h) then
			self.handler(ev)
		end
	end
end

-- Textbox class

A.gui.textbox = A.gui.element:extends({name:"textbox"})

function A.gui.textbox:init(x, y, w)
	self.x = x
	self.y = y
	self.w = w
	self.text = ""
end

function A.gui.textbox:draw()
	-- Im implementing custom textbox for when i get back from vacation.
	A.draw.box(self.x, self.y)
end

function A.gui.textbox:event(ev)
	if self.focused then
		--Mouse click focuses. see misc and contained
	
	end
end